version: '3.8'

services:
  monitor:
    build:
      context: ./monitor_service
      dockerfile: Dockerfile
    container_name: api_monitor
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=monitor
      - MYSQL_PASSWORD=monitorpass
      - MYSQL_DATABASE=api_monitor
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
    volumes:
      - ./monitor_service:/app
    networks:
      - monitoring_network

  mysql:
    image: mysql:8.0
    container_name: api_mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=api_monitor
      - MYSQL_USER=monitor
      - MYSQL_PASSWORD=monitorpass
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - monitoring_network

  prometheus:
    image: prom/prometheus:latest
    container_name: api_prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring_network

  alertmanager:
    image: prom/alertmanager:latest
    container_name: api_alertmanager
    restart: unless-stopped
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana:latest
    container_name: api_grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"  # Expose Grafana port for external access
    networks:
      - monitoring_network

networks:
  monitoring_network:
    driver: bridge

volumes:
  mysql_data:
  prometheus_data:
  grafana_data:
